spring:
  redis:
    #    是否定制，true按照自定义的LettuceConnectionFactory走，false的话按照springboot-autoconfig走，但是pool下的配置不会生效
    customize: true
    database: 1
    max-active: 10
    max-idle: 5
    min-idle: 2
    max-wait: 120
  datasource:
    #    连接池的配置；在pom中导入druid-spring-boot-starter依赖，在datasource中加入Druid的配置参数，spring boot-auto config将会切换连接池
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/web_demo?serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    #    druid 参数配置可以参考 https://www.cnblogs.com/gslblog/p/7169481.html
    druid:
      #      默认 0；初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 8
      #      最小连接池数量
      min-idle: 5
      #      默认 8；最大连接池数量
      max-active: 40
      #      获取连接时最大等待时间，单位为毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 10000
      #      有两个含义：1) Destroy线程会检测连接的间隔时间；2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明，单位为毫秒
      time-between-eviction-runs-millis: 60000
      #      连接出错后重试时间间隔，单位为毫秒
      time-between-connect-error-millis: 5000
      #      指定一个空闲连接最少空闲多久后可被清除，单位为毫秒
      min-evictable-idle-time-millis: 180000
      #      用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。MySql:SELECT 1；SqlServer:SELECT 1；Oracle:SELECT 'x' FROM DUAL；PostgreSql:SELECT 'x'
      validation-query: SELECT 'x'
      #      默认 false；建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #      默认 true；申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: true
      #      默认 false；归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
      #      指定数据源名
      name: DruidDataSource
      #      默认 false；是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: true
      #      默认 -1；要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-open-prepared-statements: 10
      #      默认false；如果连接泄露，是否需要回收泄露的连接
      remove-abandoned: true
      #      默认5分钟（300 000毫秒）；连接回收的超时时间
      remove-abandoned-timeout-millis: 7200000
      #      默认false；如果回收了泄露的连接，是否要打印一条log
      log-abandoned: true